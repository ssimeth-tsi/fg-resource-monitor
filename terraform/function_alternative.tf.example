# Alternative Option 2: Using local-exec provisioner
resource "null_resource" "zip_function" {
  triggers = {
    # Trigger re-zipping when any Python file changes
    source_hash = sha256(join("", [
      for file in fileset("${path.module}/..", "*.py") : filesha256("${path.module}/../${file}")
    ]))
    src_hash = sha256(join("", [
      for file in fileset("${path.module}/../src", "*.py") : filesha256("${path.module}/../src/${file}")
    ]))
  }
  
  provisioner "local-exec" {
    command     = "cd ${path.module}/.. && zip -r fg-resource-monitor.zip index.py requirements.txt src/"
    working_dir = "${path.module}/.."
  }
}

resource "opentelekomcloud_fgs_function_v2" "fg_resource_monitor" {
  name        = "fg-resource-monitor"
  app         = "default"
  agency      = "functiongraph"
  handler     = "index.handler"
  memory_size = 128
  timeout     = 30
  runtime     = "Python3.9"
  code_type   = "zip"
  func_code   = filebase64("${path.module}/../fg-resource-monitor.zip")
  
  lifecycle {
    ignore_changes = [user_data]
  }
  
  depends_on = [null_resource.zip_function]
}